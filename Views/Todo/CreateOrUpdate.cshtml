@model DesafioTodo.Models.Todo

@{
    ViewData["Title"] = "CreateOrUpdate";
}
<div class="conteudo container col-6">
    <div class="conteudo-padrao">
    <h1 class="conteudo-padrao-titulo">Task</h1>

    <div class="conteudo-padrao-for col-md-4">
        <form asp-action="CreateOrUpdate">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class=" conteudo-form-text form-group">
                <label asp-for="Tasks" class="control-label"></label>
                <input asp-for="Tasks" class="form-control" />
                <span asp-validation-for="Tasks" class="text-danger"></span>
            </div>
            <div class=" conteudo-form-text form-check form-switch">
                <label class="form-check-label" for="flexSwitchCheckDefault">
                    <input class="form-check-input" type="checkbox" role="switch" id="flexSwitchCheckDefault" asp-for="Done" /> @Html.DisplayNameFor(model => model.Done)
                </label>
            </div>
            
            <div class="form-group">
                <input type="submit" value="Salvar" class="btn btn-primary" />
            </div>
        </form>
    </div>
    
    <a class="conteudo-voltar" asp-action="Index"><img src="~/img/back.png"></a>
    
</div>
</div>



@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
